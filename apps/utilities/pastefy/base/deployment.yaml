apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpl
  labels:
    app: dpl
    version: "7.1.4"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: dpl
  template:
    metadata:
      labels:
        app: dpl
        version: "7.1.4"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: dpl
          image: interaapps/pastefy:7.1.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: cm-pastefy
          env:
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: secret-pastefy
                  key: DATABASE_HOST
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-pastefy
                  key: DATABASE_PASSWORD
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: secret-pastefy
                  key: DATABASE_NAME
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: secret-pastefy
                  key: DATABASE_USER
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
              ephemeral-storage: "100Mi"
            limits:
              memory: "512Mi"
              cpu: "500m"
              ephemeral-storage: "500Mi"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache
              mountPath: /var/cache
      initContainers:
        - name: wait-for-db
          image: busybox:1.35
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for MySQL database to be ready..."
              until nc -z $DATABASE_HOST $DATABASE_PORT; do
                echo "MySQL not ready, waiting..."
                sleep 2
              done
              echo "MySQL is ready!"
          envFrom:
            - configMapRef:
                name: cm-pastefy
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache
          emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
